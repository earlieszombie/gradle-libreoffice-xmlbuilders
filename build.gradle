plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'org.jreleaser' version '1.18.0'
}

group = 'org.boldi.libreoffice.utils'
version = '1.0.0-RC1'
description = 'A Gradle plugin for generating th XML files needed to build a LibreOffice Calc Add-in'


def pluginId = 'xmlbuilders'
def pluginClassName = 'XmlBuilders'

repositories {
    mavenCentral()
}

// Configure Java and GPG for Maven Central requirements
java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    repositories {
        mavenLocal()
    }
    publications {
        // Configure all publications with required Maven Central metadata
        all { publication ->
            if (publication instanceof MavenPublication) {
                pom {
                    name = rootProject.name
                    description = 'LibreOffice Calc Add-ins XML files builders'
                    url = 'https://github.com/earlieszombie/gradle-libreoffice-xmlbuilders'

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'earlieszombie'
                            name = 'Fred Boldireff'
                            email = 'earlieszombie@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/earlieszombie/gradle-libreoffice-xmlbuilders.git'
                        developerConnection = 'scm:git:ssh://github.com/earlieszombie/gradle-libreoffice-xmlbuilders.git'
                        url = 'https://github.com/earlieszombie/gradle-libreoffice-xmlbuilders'
                    }
                }
            }
        }
    }
}

jreleaser {
    project {
        // Essential project metadata for JReleaser and Maven Central
        name = 'libreoffice-xmlbuilders'
        description = 'A Gradle plugin for building and manipulating XML files involved in LibreOffice Java Calc Add-ins development.'
        authors = ['Fred Boldireff']
        license = 'Apache-2.0'
        links {
            homepage = 'https://github.com/earlieszombie/gradle-libreoffice-xmlbuilders'
        }
    }
    signing {
        active = 'ALWAYS'
        mode = 'COSIGN'
        armored = false
        cosign {
            privateKeyFile = '__USE_ENVIRONMENT_VARIABLE__'
            publicKeyFile = '__USE_ENVIRONMENT_VARIABLE__'
        }
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    applyMavenCentralRules = true
                    username = System.getenv('SONATYPE_USERNAME')
                    password = System.getenv('SONATYPE_PASSWORD')
                    stagingRepositories = [System.getProperty('user.home') + '/.m2/repository']
                }
            }
        }
    }

    // Optional: Configure GitHub releases if you want JReleaser to create them
    release {
        github {
            name = 'gradle-libreoffice-xmlbuilders'
            token = System.getenv('JRELEASER_GITHUB_TOKEN') // GitHub personal access token
        }
    }
}

dependencies {
    implementation 'org.yaml:snakeyaml:2.4'
}

testing {
    suites {
        test {
            useSpock('2.2-groovy-3.0')
        }
        functionalTest(JvmTestSuite) {
            useSpock('2.2-groovy-3.0')
            dependencies {
                implementation project()
                implementation 'org.yaml:snakeyaml:2.4'
            }
            targets {
                all {
                    testTask.configure { 
                        shouldRunAfter(test)
                    }
                }
            }
        }
    }
}

repositories {
    mavenCentral()
}

gradlePlugin {
    plugins {
        "${pluginId}" {
            id = "${group}.${pluginId}"
            implementationClass = "${group}.${pluginClassName}"
        }
    }
}

gradlePlugin.testSourceSets.add(sourceSets.functionalTest)

tasks.named('check') {
    dependsOn(testing.suites.functionalTest)
}
